to marriage-model
  let num-marriage 0
  (ifelse 
    year = 2021 [set num-marriage round (item 0 Nmarr / 1000)]
    year = 2022 [set num-marriage round (item 1 Nmarr / 1000)]
    year = 2023 [set num-marriage round (item 2 Nmarr / 1000)]
    year = 2024 [set num-marriage round (item 3 Nmarr / 1000)]
    year = 2025 [set num-marriage round (item 4 Nmarr / 1000)]
    year = 2026 [set num-marriage round (item 5 Nmarr / 1000)]
    year = 2027 [set num-marriage round (item 6 Nmarr / 1000)]
    year = 2028 [set num-marriage round (item 7 Nmarr / 1000)]
    year = 2029 [set num-marriage round (item 8 Nmarr / 1000)]
    year = 2030 [set num-marriage round (item 9 Nmarr / 1000)]
    year = 2031 [set num-marriage round (item 10 Nmarr / 1000)]
    [set num-marriage round (item 11 Nmarr / 1000)]
  )
  set num-marriage num-marriage * 2
  let i1 int (num-marriage * 0.95)  ;Calculate the number of people under 40 who got married this year
  let i2 int num-marriage - i1 ; Calculate the number of people above 40 who got married this year
  
  ;select people will get married this year
  while [i2 + i1 >= 0]
  [
    ;Two age groups are needed
    if (i1 > 0 and i2 > 0)
    [
      ;Randomly select an unmarried woman of appropriate age as the bride
      let bride nobody
      ifelse social-network
      [set bride one-of people with [gender = 0 and age >= 20 and count in-couple-neighbors = 0 and count in-friend-neighbors with [gender = 1 and age >= 20 and age - [age] of myself <= 10 and age - [age] of myself >= -10 and count in-couple-neighbors = 0 and hhd != [hhd] of myself] > 0]]
      [set bride one-of people with [gender = 0 and age >= 20 and count in-couple-neighbors = 0]]
      
      
      ;Choose a unmarried male of appropriate age from the bride's friends (if social network model exists) or a Unmarried male of appropriate age as the groom 
      if bride != nobody
      [
        let bridegroom nobody
        ifelse social-network
        [set bridegroom one-of people with [gender = 1 and age >= 20 and age - [age] of bride <= 10 and age - [age] of bride >= -10 and count in-couple-neighbors = 0 and hhd != [hhd] of bride and friend-neighbor? bride]]
        [set bridegroom one-of people with [gender = 1 and age >= 20 and age - [age] of bride <= 10 and age - [age] of bride >= -10 and count in-couple-neighbors = 0 and hhd != [hhd] of bride]]
        
        if (bridegroom != nobody) 
        [
          ;Successfully found a new couple and updated the required number of people
          ifelse ([age] of bride <= 39) [set i1 i1 - 1] [set i2 i2 - 1]
          ifelse ([age] of bride >= 40) [set i1 i1 - 1] [set i2 i2 - 1]
          ask bride [set color pink]
          ask bridegroom [set color white]
          ask bride 
          [
            create-couple-with bridegroom  ;create couple link
            ask my-friends with [other-end = bridegroom] [die] ;break the friend link
          ]
        ]
      ]
    ]
    
    ;only need people below 40 years old
    if (i1 > 0 and i2 <= 0) 
    [
      ;Randomly select an unmarried woman of appropriate age as the bride
      let bride nobody
      ifelse social-network
      [set bride one-of people with [gender = 0 and age >= 20 and age <= 39 and count in-couple-neighbors = 0 and count in-friend-neighbors with [gender = 1 and age >= 20 and age - [age] of myself <= 10 and age - [age] of myself >= -10 and count in-couple-neighbors = 0 and hhd != [hhd] of myself] > 0]]
      [set bride one-of people with [gender = 0 and age >= 20 and age <= 39 and count in-couple-neighbors = 0]]
      
      if bride != nobody
      [
        let bridegroom nobody
        ifelse social-network
        [set bridegroom one-of people with [gender = 1 and age >= 20 and age - [age] of bride <= 10 and age - [age] of bride >= -10 and count in-couple-neighbors = 0 and hhd != [hhd] of bride and friend-neighbor? bride]]
        [set bridegroom one-of people with [gender = 1 and age >= 20 and age - [age] of bride <= 10 and age - [age] of bride >= -10 and count in-couple-neighbors = 0 and hhd != [hhd] of bride]]
        if (bridegroom != nobody) 
        [
          ifelse ([age] of bride <= 39) [set i1 i1 - 1] [set i2 i2 - 1]
          ifelse ([age] of bride >= 40) [set i1 i1 - 1] [set i2 i2 - 1]
          ask bride [set color pink]
          ask bridegroom [set color white]
          ask bride 
          [
            create-couple-with bridegroom 
            ask my-friends with [other-end = bridegroom] [die] 
          ]
        ]
      ]
    ]
    
    ;only need people above 40 years old
    if (i1 <= 0 and i2 > 0)
    [
      let bride one-of people with [gender = 0 and age >= 40 and count in-couple-neighbors = 0 and count in-friend-neighbors with [gender = 1 and age >= 20 and age - [age] of myself <= 10 and age - [age] of myself >= -10 and count in-couple-neighbors = 0 and hhd != [hhd] of myself] > 0]
      
      if bride != nobody
      [
        let bridegroom nobody
        ifelse social-network
        [set bridegroom one-of people with [gender = 1 and age >= 20 and age - [age] of bride <= 10 and age - [age] of bride >= -10 and count in-couple-neighbors = 0 and hhd != [hhd] of bride and friend-neighbor? bride]]
        [set bridegroom one-of people with [gender = 1 and age >= 20 and age - [age] of bride <= 10 and age - [age] of bride >= -10 and count in-couple-neighbors = 0 and hhd != [hhd] of bride]]
        if (bridegroom != nobody) 
        [
          ifelse ([age] of bride <= 39) [set i1 i1 - 1] [set i2 i2 - 1]
          ifelse ([age] of bride >= 40) [set i1 i1 - 1] [set i2 i2 - 1]
          ask bride [set color pink]
          ask bridegroom [set color white]
          ask bride 
          [
            create-couple-with bridegroom  
            ask my-friends with [other-end = bridegroom] [die] 
          ]
        ]
      ]
    ]
  ]
  
  ask people with [color = pink]
  [
    let bride self
    let bridegroom one-of people with [couple-neighbor? myself]
    let new-family 0 ; a local variable to record whether this new couple has already moved into a family
    
    ;Rules: (1) Neither of them is the householder (relationship = 1): they will separate from their original family and form a new one
    ;(2) One of them is householder: The one who is not householder joins the family who is householder
    ;(3) If both are householder, the one with fewer persons joins the one with more persons.
    
    
    ; Neither of them is the householder (relationship = 1): they will separate from their original family and form a new one
    if ([relationship] of bride != 1 and [relationship] of bridegroom != 1 and new-family = 0)
    [
      set new-family 1
      let hhd1 (max [hhd] of people + 1)
      ask one-of people with [(hhd = [hhd] of bride and relationship = 1) or (hhd = [hhd] of bridegroom and relationship = 1)][set flexible flexible + 1] ;two original households' flexible trigger increases by 1
      let child-bridegroom people with [hhd = [hhd] of bridegroom and age < 18 and in-parent-neighbor? bridegroom] ;record children of bridegroom aged below 18 years old
      let child-bride people with [hhd = [hhd] of bride and age < 18 and in-parent-neighbor? bride] ;record children of bride aged below 18 years old
      ask bridegroom [set hhd hhd1 set relationship 1 set mandatory 1]
      ask bride [set hhd hhd1 set relationship 2]
      ask child-bride [set hhd hhd1 set relationship 3]
      ask child-bridegroom [set hhd hhd1 set relationship 3]
    ]
    
    ;One of them is householder: The one who is not householder joins the family who is householder
    if ([relationship] of bride = 1 and [relationship] of bridegroom != 1 and new-family = 0) ;Bride is householder, groom is not, groom joins bride's household
    [
      set new-family 1
      ask one-of people with [hhd = [hhd] of bridegroom and relationship = 1][set flexible flexible + 1]
      let child-bridegroom people with [hhd = [hhd] of bridegroom and age < 18 and parent-neighbor? bridegroom] ;record children of bridegroom aged below 18 years old
      ask bridegroom [set hhd [hhd] of bride set relationship 2]
      ask child-bridegroom [set hhd [hhd] of bride set relationship 3]
      ask people with [hhd = [hhd] of bride][move-to bride set livelong [livelong] of bride set livelat [livelat] of bride]
    ]
    
    if ([relationship] of bride != 1 and [relationship] of bridegroom = 1 and new-family = 0) ;bridegroom is householder, bride is not, bride joins bridegroom's household
    [
      set new-family 1
      ask one-of people with [hhd = [hhd] of bride and relationship = 1][set flexible flexible + 1] ;bride's original household's flexible trigger increases by 1
      let child-bride people with [hhd = [hhd] of bride and age < 18 and parent-neighbor? bridegroom] ;record children of bride aged below 18 years old
      ask bride [set hhd [hhd] of bridegroom set relationship 2]
      ask child-bride [set hhd [hhd] of bridegroom set relationship 3]
      ask people with [hhd = [hhd] of bridegroom][move-to bridegroom set livelong [livelong] of bridegroom set livelat [livelat] of bridegroom]
    ]
    
    ; If both are householder, the one with fewer persons joins the one with more persons.
    if ([relationship] of bride = 1 and [relationship] of bridegroom = 1 and new-family = 0) 
    [
      set new-family 1
      let num-bride count people with [hhd = [hhd] of bride]
      let num-bridegroom count people with [hhd = [hhd] of bridegroom]
      ifelse (num-bride > num-bridegroom) ;The bride's original family is larger than the groom's original family, and the groom joins the bride's family.
      [
        let hhd1 [hhd] of bridegroom
        let hhd2 [hhd] of bride
        ask bridegroom [set hhd hhd2 set relationship 2]
        let child-bridegroom people with [hhd = hhd1 and age < 18 and parent-neighbor? bridegroom] 
        if child-bridegroom != nobody [ask child-bridegroom [set hhd hhd2 set relationship 3]]
        ask people with [hhd = hhd2][move-to bride set livelong [livelong] of bride set livelat [livelat] of bride]
        ask bride [set flexible flexible + 1] 
        
        ;The groom's original family chooses a householder and renews the family relationship
        if (count people with [hhd =  hhd1] > 0)
        [
          ;selecting householder
          let num-adult count people with [hhd = hhd1 and age >= 18]
          ifelse (num-adult > 0)
          [ask one-of people with [hhd = hhd1 and age >= 18] [set relationship 1 set mandatory [mandatory] of bridegroom set flexible [flexible] of bridegroom + 1]]
          [ask one-of people with [hhd = hhd1][set relationship 1]]
          let hhder one-of people with [hhd = hhd1 and relationship = 1]
          ask hhder
          [
            update-relationship hhd1 hhder ;renews the family relationship
            ;New householder records residence-related information
            set residence-cost [residence-cost] of bridegroom
            set residence-size [residence-size] of bridegroom
            if [count in-rent-neighbors] of bridegroom = 1 [let target one-of residences with [rent-neighbor? bridegroom] create-rent-with target]
            if [count in-purchase-neighbors] of bridegroom = 1 [let target one-of residences with [purchase-neighbor? bridegroom] create-purchase-with target]
          ]     
        ]
        
        ask bridegroom [set residence-size 0 set residence-cost 0 set current-accessibility 0 set mandatory 0 set flexible 0 ask my-rents [die] ask my-purchases [die]]
      ]
      
      ;;The bridegroom's original family is larger than the groom's original family, and the groom joins the bride's family.
      [
        set new-family 1
        let hhd1 [hhd] of bride
        let hhd2 [hhd] of bridegroom
        ask bride [set hhd hhd2 set relationship 2]
        
        let child-bride people with [hhd = hhd1 and age < 18 and parent-neighbor? bride] 
        if child-bride != nobody [ask child-bride [set hhd hhd1 set relationship 3]]
        ask people with [hhd = hhd2][move-to bridegroom set livelong [livelong] of bridegroom set livelat [livelat] of bridegroom]
        ask bridegroom [set flexible flexible + 1] ;由于家庭人数发生变化，flexible trigger + 1
        
        if (count people with [hhd =  hhd1] > 0)
        [
          let num-adult count people with [hhd = hhd1 and age >= 18]
          ifelse (num-adult > 0)
          [ask one-of people with [hhd = hhd1 and age >= 18] [set relationship 1]]
          [ask one-of people with [hhd = hhd1][set relationship 1]]
          let hhder one-of people with [hhd = hhd1 and relationship = 1]
          ask hhder 
          [
            update-relationship hhd1 hhder
            set residence-cost [residence-cost] of bride
            set residence-size [residence-size] of bride
            if [count in-rent-neighbors] of bride = 1 [let target one-of residences with [rent-neighbor? bride] create-rent-with target]
            if [count in-purchase-neighbors] of bride = 1 [let target one-of residences with [purchase-neighbor? bride] create-purchase-with target]
            set mandatory [mandatory] of bride set flexible [flexible] of bride + 1
          ]        
        ]
      
        ask bride [set residence-size 0 set residence-cost 0 set current-accessibility 0 set mandatory 0 set flexible 0 ask my-rents [die] ask my-purchases [die]]  
      ]
    ]
    set color white ask bridegroom [set color white]
  ]
  
  ask people [set number count people with [hhd = [hhd] of myself] set hhd-income (sum [income] of people with [hhd = [hhd] of myself] ) * 12]
  print "marriage model finished"
end

to divorce-model
  let num-divorce 0
  (ifelse 
    year = 2021 [set num-divorce round (item 0 Ndivo / 1000)]
    year = 2022 [set num-divorce round (item 1 Ndivo / 1000)]
    year = 2023 [set num-divorce round (item 2 Ndivo / 1000)]
    year = 2024 [set num-divorce round (item 3 Ndivo / 1000)]
    year = 2025 [set num-divorce round (item 4 Ndivo / 1000)]
    year = 2026 [set num-divorce round (item 5 Ndivo / 1000)]
    year = 2027 [set num-divorce round (item 6 Ndivo / 1000)]
    year = 2028 [set num-divorce round (item 7 Ndivo / 1000)]
    year = 2029 [set num-divorce round (item 8 Ndivo / 1000)]
    year = 2030 [set num-divorce round (item 9 Ndivo / 1000)]
    year = 2031 [set num-divorce round (item 10 Ndivo / 1000)]
    [set num-divorce round (item 11 Ndivo / 1000)]
  )
  
  ;Step 1: calculate the number of people that will get divorced this year
  set num-divorce num-divorce * 2 ; num-divorce records the number of couples that will get divorced, so, we need multiply this number by two to get the number of 
  let num-divorce1 round (0.7 * num-divorce) ;number of people get divorced aged below 40
  let num-divorce2 num-divorce - num-divorce1 ;number of people get divorced aged above 40
  
  ;Step 2: select couples to get divorced, and mark them with blue (husband) and pink (wife)
  while [num-divorce1 + num-divorce2 > 0]
  [
    if (num-divorce1 > 0 and num-divorce2 > 0)
    [
      let wife one-of people with [count in-couple-neighbors = 1 and gender = 0 and count people with [hhd = [hhd] of myself and color != white] = 0]
      if wife != nobody
      [
        let husband one-of people with [couple-neighbor? wife]
        
        ifelse [age] of wife <= 39 [set num-divorce1 num-divorce1 - 1] [set num-divorce2 num-divorce2 - 1]
        ifelse [age] of husband <= 39 [set num-divorce1 num-divorce1 - 1] [set num-divorce2 num-divorce2 - 1]
        ask wife [set color pink]
        ask husband [set color blue]
      ]
    ]
    
    if (num-divorce1 <= 0 and num-divorce2 > 0)
    [
      let wife one-of people with [count in-couple-neighbors = 1 and age >= 40 and count people with [hhd = [hhd] of myself and color != white] = 0]
      if wife != nobody
      [
        let husband one-of people with [couple-neighbor? wife]
        ifelse [age] of wife <= 39 [set num-divorce1 num-divorce1 - 1] [set num-divorce2 num-divorce2 - 1]
        ifelse [age] of husband <= 39 [set num-divorce1 num-divorce1 - 1] [set num-divorce2 num-divorce2 - 1]
        ask wife [set color pink]
        ask husband [set color blue]
      ]
    ]
    
    if (num-divorce1 > 0 and num-divorce2 <= 0)
    [
      let wife one-of people with [count in-couple-neighbors = 1 and age <= 39]
      if wife != nobody
      [
        let husband one-of people with [couple-neighbor? wife]
        ifelse [age] of wife <= 39 [set num-divorce1 num-divorce1 - 1] [set num-divorce2 num-divorce2 - 1]
        ifelse [age] of husband <= 39 [set num-divorce1 num-divorce1 - 1] [set num-divorce2 num-divorce2 - 1]
        ask wife [set color pink]
        ask husband [set color blue]
      ]
    ]
  ]
  
  
  ;step 3: couples get divorced, and a family is divided into two. This means, husband or wife needs to be independent from their original household.
  ;the rules to select one couple to get divorce is: (1) the people with relationship = 2 or 13 will leave the original household (2) if neither wife's nor husband's relationship = 2 or 13, randomly choose one to leave
  ask people with [color = pink]
  [
    let wife self
    let husband one-of people with [couple-neighbor? wife]
    ;clear the relationship of couples
    ask wife [ask my-couples [die]]
  
    let hhd1 max [hhd] of people + 1 ;create a new id of household
    let hhd2 [hhd] of wife ;record the old id of household
    let new-family 0 ;a local variable to record whether the family is divided
  
    ;people with relationship = 2 leave the original family
    if ([relationship] of wife = 2 and new-family = 0) ;wife's relationship equals to 2
    [
      set new-family 1
      ask wife [set hhd hhd1 set relationship 1]
      ask people with [hhd = hhd2 and (relationship = 5 or relationship = 9 or relationship = 10)] [set hhd hhd1]  ;wife's parents and  groundparents will leave
      let children2 people with [age < 18 and parent-neighbor? wife and parent-neighbor? husband]
      if children2 != nobody
      [
        ask children2 ;Children under the age of 18 have a half chance of following and leaving
        [
          let p random-float 1 
          if (p > 0.5) 
          [
            set hhd hhd1
          ]
        ]
      ]
      ask wife [update-relationship hhd1 wife set mandatory 1]
      ask husband [set flexible flexible + 1]
    ]
  
    if ([relationship] of husband = 2 and new-family = 0) ;husband's relationship equals to 2
    [
      set new-family 1
      ask husband [set hhd hhd1 set relationship 1]
      ask people with [hhd = hhd2 and (relationship = 5 or relationship = 9 or relationship = 10)] [set hhd hhd1]
      let children2 people with [parent-neighbor? wife and parent-neighbor? husband and age < 18]
      if children2 != nobody
      [
        ask children2 ;Children under the age of 18 have a half chance of following and leaving
        [
          let p random-float 1 
          if (p > 0.5) 
          [
            set hhd hhd1
          ]
        ]
      ]
      ask husband [update-relationship hhd1 husband set mandatory 1]
      ask wife [set flexible flexible + 1]
    ]
  
    ;Son-in-law/daughter-in-law leaving
    if ([relationship] of wife = 13 and new-family = 0) ;if relationship of wife is 13
    [
      set new-family 1
      ask wife [set hhd hhd1 set relationship 1]
      let children2 people with [parent-neighbor? wife and parent-neighbor? husband and age < 18]
      if children2 != nobody
      [
        ask children2
        [
          let p random-float 1 
          if (p > 0.5) 
          [
            set hhd hhd1
          ]
        ]
      ]
      ask wife [update-relationship hhd1 wife set mandatory 1]
      ask one-of people with [hhd = [hhd] of husband and relationship = 1] [set flexible flexible + 1]
    ]
  
    if ([relationship] of husband = 13 and new-family = 0) ;if relationship of wife is 13
    [
      ask husband [set hhd hhd1 set relationship 1 set mandatory 1]
      let children2 people with [parent-neighbor? wife and parent-neighbor? husband and age < 18] 
      if children2 != nobody
      [
        ask children2 
        [
          let p random-float 1 
          if (p > 0.5) 
          [
            set hhd hhd1
          ]
        ]
      ]
      ask husband [update-relationship hhd1 husband set mandatory 1] 
      ask one-of people with [hhd = [hhd] of wife and relationship = 1][set flexible flexible + 1]
    ]
  
    if ([relationship] of wife != 1 and [relationship] of wife != 2 and [relationship] of wife != 13 and new-family = 0)  ;otherwise, randomly select one to leave
    [
      ifelse (random-float 1 > 0.5) ;p > 0.5 wife is selected；p<= 0.5 husband is slected
      [
        ask wife [set hhd hhd1 set relationship 1 set mandatory 1]
        ask one-of people with [hhd = [hhd] of husband and relationship = 1][set flexible flexible + 1]
      ]
      [
        ask husband [set hhd hhd1 set relationship 1 set mandatory 1]
        ask one-of people with [hhd = [hhd] of wife and relationship = 1][set flexible flexible + 1]
      ]
    ]
    set color white ask husband [set color white]
  ]
  
  ask people [set number count people with [hhd = [hhd] of myself] set hhd-income (sum [income] of people with [hhd = [hhd] of myself]) * 12]
  print "divorce model finished"
end
  