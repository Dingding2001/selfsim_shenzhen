to death-model
  ;54岁及以下的人的平均死亡率为0.97‰
  ;55~79岁的人的平均死亡率为12.47‰
  ;80~89岁的人的平均死亡率为71.75‰
  ;90岁以上的人的平均死亡率为149.87‰
  let num-death1 count people with [age <= 54] * 0.97 / 1000
  let i 1
  while [i <= num-death1]
  [
    set i i + 1
    let target one-of people with [age <= 54]
    ask target
    [
      if (relationship = 1 and count people with [hhd = [hhd] of myself] >= 2) ;如果死亡的人为户主，且家庭中超过2人
      [
        let hhd1 hhd
        set relationship 0
        ifelse (count other people with [hhd = hhd1 and age >= 18] > 0)
        [ask one-of other people with [hhd = hhd1 and age >= 18] [set relationship 1]]
        [ask one-of other people with [hhd = hhd1][set relationship 1]]
        let hhder one-of people with [hhd = hhd1 and relationship = 1]
        ask hhder 
        [
          update-relationship hhd1 hhder
          set mandatory [mandatory] of target
          set flexible [flexible] of target + 1
          set residence-cost [residence-cost] of target
          set residence-size [residence-size] of target
          if [count in-rent-neighbors] of target = 1 [let target1 one-of residences with [rent-neighbor? target] create-rent-with target1]
          if [count in-purchase-neighbors] of target = 1 [let target1 one-of residences with [purchase-neighbor? target] create-purchase-with target1]
        ]
      ]
      die
    ]
  ]
  
  let num-death2 count people with [age >= 55 and age <= 79] * 12.47 / 1000
  set i 1
  while [i <= num-death2]
  [
    set i i + 1
    let target one-of people with [age >= 55 and age <= 79]
    ask target
    [
      if (relationship = 1 and count people with [hhd = [hhd] of myself] >= 2) ;如果死亡的人为户主，且家庭中超过2人
      [
        let hhd1 hhd
        set relationship 0
        ifelse (count other people with [hhd = hhd1 and age >= 18] > 0)
        [ask one-of other people with [hhd = hhd1 and age >= 18] [set relationship 1]]
        [ask one-of other people with [hhd = hhd1][set relationship 1]]
        let hhder one-of people with [hhd = hhd1 and relationship = 1]
        ask hhder 
        [
          update-relationship hhd1 hhder
          set mandatory [mandatory] of target
          set flexible [flexible] of target + 1
          set residence-cost [residence-cost] of target
          set residence-size [residence-size] of target
          if [count in-rent-neighbors] of target = 1 [let target1 one-of residences with [rent-neighbor? target] create-rent-with target1]
          if [count in-purchase-neighbors] of target = 1 [let target1 one-of residences with [purchase-neighbor? target] create-purchase-with target1]
        ]
      ]
      die
    ]
  ]
  
  let num-death3 count people with [age >= 80 and age <= 89] * 71.75 / 1000
  set i 1
  while [i <= num-death3]
  [
    set i i + 1
    let target one-of people with [age >= 80 and age <= 89]
    ask target
    [
      if (relationship = 1 and count people with [hhd = [hhd] of myself] >= 2) ;如果死亡的人为户主，且家庭中超过2人
      [
        let hhd1 hhd
        set relationship 0
        ifelse (count other people with [hhd = hhd1 and age >= 18] > 0)
        [ask one-of other people with [hhd = hhd1 and age >= 18] [set relationship 1]]
        [ask one-of other people with [hhd = hhd1][set relationship 1]]
        let hhder one-of people with [hhd = hhd1 and relationship = 1]
        ask hhder 
        [
          update-relationship hhd1 hhder
          set mandatory [mandatory] of target
          set flexible [flexible] of target + 1
          set residence-cost [residence-cost] of target
          set residence-size [residence-size] of target
          if [count in-rent-neighbors] of target = 1 [let target1 one-of residences with [rent-neighbor? target] create-rent-with target1]
          if [count in-purchase-neighbors] of target = 1 [let target1 one-of residences with [purchase-neighbor? target] create-purchase-with target1]
        ]
      ]
      die
    ]
  ]
  
  let num-death4 count people with [age >= 90] * 149.87 / 1000
  set i 1
  while [i <= num-death4]
  [
    set i i + 1
    let target one-of people with [age >= 90]
    ask target
    [
      if (relationship = 1 and count people with [hhd = [hhd] of myself] >= 2) ;如果死亡的人为户主，且家庭中超过2人
      [
        let hhd1 hhd
        set relationship 0
        ifelse (count other people with [hhd = hhd1 and age >= 18] > 0)
        [ask one-of other people with [hhd = hhd1 and age >= 18] [set relationship 1]]
        [ask one-of other people with [hhd = hhd1][set relationship 1]]
        let hhder one-of people with [hhd = hhd1 and relationship = 1]
        ask hhder 
        [
          update-relationship hhd1 hhder
          set mandatory [mandatory] of target
          set flexible [flexible] of target + 1
          set residence-cost [residence-cost] of target
          set residence-size [residence-size] of target
          if [count in-rent-neighbors] of target = 1 [let target1 one-of residences with [rent-neighbor? target] create-rent-with target1]
          if [count in-purchase-neighbors] of target = 1 [let target1 one-of residences with [purchase-neighbor? target] create-purchase-with target1]
        ]
      ]
      die
    ]
  ]
  
  
  print "death model finished"
end